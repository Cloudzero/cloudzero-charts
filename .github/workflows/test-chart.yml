name: test-chart
on:
  push:
    # Only create "develop" branch tagged image
    branches:
      - develop
    # Only create "version tag" tagged image
    tags:
      - "v*.*.*"
  # create any PR image (tag is pr-<number>)
  # these should be cleaned once merged using the docker-clean.yml
  pull_request:

jobs:
  build-image:
    uses: ./.github/workflows/docker-publish.yml
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    secrets:
      envPAT: ${{ secrets.ENVPAT }}
    with:
      registry_name: ghcr.io
      repository_name: ${{ github.repository }}
      username: ${{ github.actor }}
      image_name: cloudzero-agent-validator
      image_description: "CloudZero Agent Environment Validator Image"
      dockerfile_path: charts/cloudzero-agent/src/Dockerfile
      docker_context: charts/cloudzero-agent/src
      platforms: "linux/amd64,linux/arm64"
      push: true

  test-chart:
    runs-on: ubuntu-latest
    needs: build-image
    env:  # Define environment variables here
      NAMESPACE: monitoring
      PROM_CHART_REPO: https://prometheus-community.github.io/helm-charts
      CLUSTER_NAME: cz-node-agent-ci
      CLOUD_ACCOUNT_ID: 00000000
      CZ_API_TOKEN: ${{ secrets.CZ_API_TOKEN || 'undefined' }}
      IMAGE_NAME: ${{ needs.build-image.outputs.image_name || '' }}
      IMAGE_TAG: ${{ needs.build-image.outputs.image_tag || 'latest' }}
      IMAGE_DIGEST: ${{ needs.build-image.outputs.image_digest || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect if any files have changed
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: true
          files: |
            **
            **.md
            charts/**/docs/**
            charts/**/tests/**
            charts/**/src/**
            charts/**/**.yaml

      - name: List all changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Set up Helm
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - uses: actions/setup-python@v5
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: helm/chart-testing-action@v2.6.1

      - name: Lint the chart
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          cd charts/cloudzero-agent
          helm dependency update
          ct lint --debug --charts . \
            --chart-repos=kube-state-metrics=$PROM_CHART_REPO \
            --chart-repos=prometheus-node-exporter=$PROM_CHART_REPO \
            --helm-lint-extra-args "--set=existingSecretName=api-token,clusterName=$CLUSTER_NAME,cloudAccountId=$CLOUD_ACCOUNT_ID"

      - name: Create kind cluster
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: helm/kind-action@v1.10.0

      - name: Create namespace
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          kubectl create namespace $NAMESPACE

      - name: Create API Token Secret
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          kubectl create secret -n $NAMESPACE generic api-token --from-literal=value=$CZ_API_TOKEN

      - name: ensure image reference
        id: image_ref
        run: |
          echo "using IMAGE_NAME=${IMAGE_NAME}"
          echo "using IMAGE_TAG=${IMAGE_TAG}"
          echo "using IMAGE_DIGEST=${IMAGE_DIGEST}"
          if [ -z "${IMAGE_NAME}" ]; then
            exit 1
          fi
          if [ -z "$IMAGE_TAG" ]; then
            exit 1
          fi
          echo "using IMAGE_NAME=${IMAGE_NAME}"
          echo "using IMAGE_TAG=${IMAGE_TAG}"
          echo "using IMAGE_DIGEST=${IMAGE_DIGEST}"

      - name: Install the chart
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          cd charts/cloudzero-agent
          helm dependency update

          ct install --debug --charts . \
            --chart-repos=kube-state-metrics=$PROM_CHART_REPO \
            --chart-repos=prometheus-node-exporter=$PROM_CHART_REPO \
            --namespace $NAMESPACE \
            --helm-extra-set-args "\
              --set=validator.image.repository=${{ env.IMAGE_NAME }} \
              --set=validator.image.tag=${{ env.IMAGE_TAG }} \
              --set=validator.image.digest=${{ env.IMAGE_DIGEST }} \
              --set=existingSecretName=api-token \
              --set=clusterName=$CLUSTER_NAME \
              --set=cloudAccountId=$CLOUD_ACCOUNT_ID \
              --set=kube-state-metrics.enabled=true \
              --set=prometheus-node-exporter.enabled=true"

      - name: Cleanup API Token secret
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          kubectl -n $NAMESPACE delete secret api-token

      - name: Cleanup namespace
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          kubectl delete namespace $NAMESPACE
        