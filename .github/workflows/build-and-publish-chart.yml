name: Manual Release Chart

# manual trigger only
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to use for the release'
        required: false
        default: ''

jobs:
  build-and-publish-chart:
    permissions:
      contents: 'write'
      packages: 'write'
      id-token: write
      actions: 'read'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0                # fetch the whole repo history

      - name: Set up Git
        run: |
          git config --local user.email "ops@cloudzero.com"
          git config --local user.name "Automated CZ Release"

      - name: Fetch all branches
        run: git fetch --all

      - name: Checkout develop branch
        run: git checkout develop

      - name: Rebase develop branch
        run: git pull --rebase origin develop

      - name: Checkout main branch
        run: git checkout main

      - name: Rebase main branch
        run: git pull --rebase origin main

      - name: Merge develop into main
        run: git merge develop

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Build Dependencies
        run: |
          helm dependency update charts/cloudzero-agent/

      # This only gets versions - no actual changes are made to github
      - name: Get Github Tag Version
        id: version
        uses: flatherskevin/semver-action@v1
        with:
          incrementLevel: patch
          source: tags

      - name: Determine Chart Version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "NEW_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "NEW_VERSION=${{ steps.version.outputs.nextVersion }}" >> $GITHUB_ENV
          fi

      - name: Update Chart Version
        run: |
          VERSION_LINE=$(awk '/version:/ && !done {print NR; done=1}' charts/cloudzero-agent/Chart.yaml)
          sed -i ''$VERSION_LINE's/.*/version: ${{ env.NEW_VERSION }}/' charts/cloudzero-agent/Chart.yaml

      - name: Package Chart
        run: |
          helm package charts/cloudzero-agent/ --destination .deploy

      - name: Get Main Changelog Beginning Hash
        run: |
          MAIN_PREV_COMMIT_HASH=$(git rev-parse HEAD)
          echo "MAIN_PREV_COMMIT_HASH=${MAIN_PREV_COMMIT_HASH}" >> $GITHUB_ENV

      - name: Commit updated Chart.yaml
        run: |
          git add .
          git commit -m "Update Chart.yaml to version ${{ env.NEW_VERSION }}"
          git push origin main
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Generate Change Log
        id: get_changes
        run: |
          FROM=${{ env.MAIN_PREV_COMMIT_HASH }}
          TO=$(git rev-parse --short HEAD)
          CHANGES=$(git log ${FROM}..${TO} --oneline)
          echo "::set-output name=changes::${CHANGES}"

      - name: Upload Chart as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: agent-chart
          path: .deploy/cloudzero-agent-${{ env.NEW_VERSION }}.tgz

      - name: Download Chart Artifact
        uses: actions/download-artifact@v2
        with:
          name: agent-chart
          path: .

      - name: Update Index
        run: |
          helm repo index --url https://cloudzero.github.io/cloudzero-charts .        

      - name: Update GH Pages
        # copy mains version of README and docs for all charts
        run: |
          git fetch --all
          git checkout gh-pages
          git checkout main -- charts/cloudzero-agent/docs
          git checkout main -- charts/cloudzero-agent/README.md
          git checkout main -- README.md
          git add README.md charts/cloudzero-agent/docs charts/cloudzero-agent/README.md
          git commit -m "Commit for ${{ env.NEW_VERSION }}"
          git push origin gh-pages

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.NEW_VERSION }}
          tag_name: ${{ env.NEW_VERSION }}
          files: cloudzero-agent-${{ env.NEW_VERSION }}.tgz
          make_latest: true
          target_commitish: ${{ env.COMMIT_HASH }}
          body: |
            # Release ${{ env.NEW_VERSION }} Changes

            ${{ steps.get_changes.outputs.changes }}


            # Installation Instructions

            [Please follow the Installation Instructions provided in this releases README](https://github.com/Cloudzero/cloudzero-charts/blob/${{ env.NEW_VERSION }}/charts/cloudzero-agent/README.md).
