# Example configuration for using CSI Secrets Store with CloudZero Agent
# This example shows how to configure the chart to use secrets from AWS Secrets Manager,
# Azure Key Vault, or Google Secret Manager via the CSI Secrets Store driver.

# Basic required configuration
clusterName: "my-cluster"
cloudAccountId: "123456789012"  # Must be a string
region: "us-east-1"

# Use an existing secret name to satisfy validation
# This can be a dummy value when using CSI Secrets Store
existingSecretName: "cloudzero-api-key-secret"
apiKey: null

# Configure CSI Secrets Store volume for CloudZero API key
extraVolumes:
  - name: cloudzero-api-key-csi
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "cloudzero-secrets-provider"
      # Optional: Use nodePublishSecretRef for authentication
      # nodePublishSecretRef:
      #   name: secrets-store-creds

extraVolumeMounts:
  - name: cloudzero-api-key-csi
    mountPath: /etc/csi-secrets/
    readOnly: true

# Example configurations for different cloud providers:

# AWS Secrets Manager example:
# extraVolumes:
#   - name: aws-secrets
#     csi:
#       driver: secrets-store.csi.k8s.io
#       readOnly: true
#       volumeAttributes:
#         secretProviderClass: "aws-secrets-provider"

# Azure Key Vault example:
# extraVolumes:
#   - name: azure-secrets
#     csi:
#       driver: secrets-store.csi.k8s.io
#       readOnly: true
#       volumeAttributes:
#         secretProviderClass: "azure-keyvault-provider"

# Google Secret Manager example:
# extraVolumes:
#   - name: gcp-secrets
#     csi:
#       driver: secrets-store.csi.k8s.io
#       readOnly: true
#       volumeAttributes:
#         secretProviderClass: "gcp-secret-manager-provider"

# Multiple secrets example:
# extraVolumes:
#   - name: cloudzero-api-key-csi
#     csi:
#       driver: secrets-store.csi.k8s.io
#       readOnly: true
#       volumeAttributes:
#         secretProviderClass: "cloudzero-secrets-provider"
#   - name: additional-secrets
#     csi:
#       driver: secrets-store.csi.k8s.io
#       readOnly: true
#       volumeAttributes:
#         secretProviderClass: "additional-secrets-provider"
#
# extraVolumeMounts:
#   - name: cloudzero-api-key-csi
#     mountPath: /etc/csi-secrets/
#     readOnly: true
#   - name: additional-secrets
#     mountPath: /etc/additional-secrets/
#     readOnly: true

# Note: You'll also need to create a SecretProviderClass resource
# that defines how to retrieve secrets from your secret store.
# Example SecretProviderClass for AWS:
#
# apiVersion: secrets-store.csi.x-k8s.io/v1
# kind: SecretProviderClass
# metadata:
#   name: cloudzero-secrets-provider
# spec:
#   provider: aws
#   parameters:
#     objects: |
#       - objectName: "cloudzero-api-key"
#         objectType: "secretsmanager"
#         jmesPath:
#           - path: "api_key"
#             objectAlias: "value"
