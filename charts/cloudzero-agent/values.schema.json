{
  "$defs": {
    "com.cloudzero.agent.dns": {
      "additionalProperties": false,
      "properties": {
        "config": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodDNSConfig"
        },
        "policy": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/dnsPolicy"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "type": "object"
    },
    "com.cloudzero.agent.duration": {
      "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h)([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))*$",
      "type": "string"
    },
    "com.cloudzero.agent.image": {
      "additionalProperties": false,
      "properties": {
        "digest": {
          "additionalProperties": false,
          "type": ["string", "null"]
        },
        "pullPolicy": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.Container/properties/imagePullPolicy"
            },
            {
              "type": "null"
            }
          ]
        },
        "pullSecrets": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
            },
            {
              "type": "null"
            }
          ]
        },
        "registry": {
          "additionalProperties": false,
          "type": ["string", "null"]
        },
        "repository": {
          "additionalProperties": false,
          "type": ["string", "null"]
        },
        "tag": {
          "additionalProperties": false,
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "com.cloudzero.agent.tolerations": {
      "items": {
        "$ref": "#/$defs/io.k8s.api.core.v1.Toleration"
      },
      "type": "array"
    },
    "io.k8s.api.admissionregistration.v1.MatchCondition": {
      "properties": {
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["name", "expression"],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.RuleWithOperations": {
      "properties": {
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "operations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "scope": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ServiceReference": {
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": ["namespace", "name"],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhook": {
      "properties": {
        "admissionReviewVersions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "clientConfig": {
          "$ref": "#/$defs/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchConditions": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.admissionregistration.v1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "rules": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.WebhookClientConfig": {
      "properties": {
        "caBundle": {
          "format": "byte",
          "type": "string"
        },
        "service": {
          "$ref": "#/$defs/io.k8s.api.admissionregistration.v1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": ["volumeID"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Affinity": {
      "properties": {
        "nodeAffinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodAntiAffinity"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.AppArmorProfile": {
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": ["type"],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "properties": {
        "cachingMode": {
          "type": "string"
        },
        "diskName": {
          "type": "string"
        },
        "diskURI": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": ["diskName", "diskURI"],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      },
      "required": ["secretName", "shareName"],
      "type": "object"
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": ["driver"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Capabilities": {
      "properties": {
        "add": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "drop": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "properties": {
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": ["monitors"],
      "type": "object"
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": ["volumeID"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ClusterTrustBundleProjection": {
      "properties": {
        "labelSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "signerName": {
          "type": "string"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMap": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "binaryData": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        },
        "data": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "immutable": {
          "type": "boolean"
        },
        "kind": {
          "enum": ["ConfigMap"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMap",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": ["key"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Container": {
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "env": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["containerPort", "protocol"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["devicePath"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["mountPath"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "properties": {
        "containerPort": {
          "format": "int32",
          "type": "integer"
        },
        "hostIP": {
          "type": "string"
        },
        "hostPort": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      },
      "required": ["containerPort"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerResizePolicy": {
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "restartPolicy": {
          "type": "string"
        }
      },
      "required": ["resourceName", "restartPolicy"],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "properties": {
        "fieldRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "mode": {
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceFieldSelector"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "properties": {
        "medium": {
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "properties": {
        "configMapRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecretEnvSource"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVar": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/$defs/io.k8s.api.core.v1.EnvVarSource"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralContainer": {
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "env": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["containerPort", "protocol"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "targetContainerName": {
          "type": "string"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["devicePath"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["mountPath"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ExecAction": {
      "properties": {
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "type": "boolean"
        },
        "targetWWNs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "wwids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        }
      },
      "required": ["driver"],
      "type": "object"
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "datasetUUID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "format": "int32",
          "type": "integer"
        },
        "pdName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": ["pdName"],
      "type": "object"
    },
    "io.k8s.api.core.v1.GRPCAction": {
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "service": {
          "type": "string"
        }
      },
      "required": ["port"],
      "type": "object"
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "properties": {
        "directory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        }
      },
      "required": ["repository"],
      "type": "object"
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": ["endpoints", "path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.HTTPHeader"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "type": "string"
        }
      },
      "required": ["port"],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["name", "value"],
      "type": "object"
    },
    "io.k8s.api.core.v1.HostAlias": {
      "properties": {
        "hostnames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "ip": {
          "type": "string"
        }
      },
      "required": ["ip"],
      "type": "object"
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "targetPortal": {
          "type": "string"
        }
      },
      "required": ["targetPortal", "iqn", "lun"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ImageVolumeSource": {
      "properties": {
        "pullPolicy": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "properties": {
        "key": {
          "type": "string"
        },
        "mode": {
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string"
        }
      },
      "required": ["key", "path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "properties": {
        "postStart": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LifecycleHandler"
        },
        "preStop": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LifecycleHandler"
        },
        "stopSignal": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LifecycleHandler": {
      "properties": {
        "exec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ExecAction"
        },
        "httpGet": {
          "$ref": "#/$defs/io.k8s.api.core.v1.HTTPGetAction"
        },
        "sleep": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SleepAction"
        },
        "tcpSocket": {
          "$ref": "#/$defs/io.k8s.api.core.v1.TCPSocketAction"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "properties": {
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "server": {
          "type": "string"
        }
      },
      "required": ["server", "path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Node": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["Node"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NodeSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NodeStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Node",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PreferredSchedulingTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NodeSelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "properties": {
        "nodeSelectorTerms": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.NodeSelectorTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": ["nodeSelectorTerms"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": ["key", "operator"],
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "matchFields": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        }
      },
      "required": ["fieldPath"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.PersistentVolume": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["PersistentVolume"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolume",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["PersistentVolumeClaim"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "properties": {
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "dataSource": {
          "$ref": "#/$defs/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.TypedObjectReference"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.VolumeResourceRequirements"
        },
        "selector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeAttributesClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "properties": {
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      },
      "required": ["spec"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": ["claimName"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "pdID": {
          "type": "string"
        }
      },
      "required": ["pdID"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Pod": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["Pod"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Pod",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "properties": {
        "labelSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "matchLabelKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "mismatchLabelKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "namespaceSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "topologyKey": {
          "type": "string"
        }
      },
      "required": ["topologyKey"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "properties": {
        "nameservers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "options": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodDNSConfigOption"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "searches": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodOS": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodReadinessGate": {
      "properties": {
        "conditionType": {
          "type": "string"
        }
      },
      "required": ["conditionType"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodResourceClaim": {
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceClaimName": {
          "type": "string"
        },
        "resourceClaimTemplateName": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSchedulingGate": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "properties": {
        "appArmorProfile": {
          "$ref": "#/$defs/io.k8s.api.core.v1.AppArmorProfile"
        },
        "fsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "type": "string"
        },
        "runAsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "format": "int64",
          "type": "integer"
        },
        "seLinuxChangePolicy": {
          "type": "string"
        },
        "seLinuxOptions": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "supplementalGroupsPolicy": {
          "type": "string"
        },
        "sysctls": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Sysctl"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "windowsOptions": {
          "$ref": "#/$defs/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSpec": {
      "properties": {
        "activeDeadlineSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "affinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "dnsConfig": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EphemeralContainer"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostAliases": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.HostAlias"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["ip"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostUsers": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "os": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodOS"
        },
        "overhead": {
          "additionalProperties": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodReadinessGate"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceClaims": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "schedulingGates": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.PodSchedulingGate"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "securityContext": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Toleration"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "topologySpreadConstraints": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["topologyKey", "whenUnsatisfiable"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Volume"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      },
      "required": ["containers"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": ["volumeID"],
      "type": "object"
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "properties": {
        "preference": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": ["weight", "preference"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Probe": {
      "properties": {
        "exec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "grpc": {
          "$ref": "#/$defs/io.k8s.api.core.v1.GRPCAction"
        },
        "httpGet": {
          "$ref": "#/$defs/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "#/$defs/io.k8s.api.core.v1.TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeProjection"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "properties": {
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "registry": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      },
      "required": ["registry", "volume"],
      "type": "object"
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": ["monitors", "image"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceClaim": {
      "properties": {
        "name": {
          "type": "string"
        },
        "request": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "type": "string"
        }
      },
      "required": ["resource"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "properties": {
        "claims": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map"
        },
        "limits": {
          "additionalProperties": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "properties": {
        "level": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": ["gateway", "system", "secretRef"],
      "type": "object"
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": ["type"],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.Secret": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        },
        "immutable": {
          "type": "boolean"
        },
        "kind": {
          "enum": ["Secret"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "stringData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Secret",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": ["key"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "appArmorProfile": {
          "$ref": "#/$defs/io.k8s.api.core.v1.AppArmorProfile"
        },
        "capabilities": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Capabilities"
        },
        "privileged": {
          "type": "boolean"
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SeccompProfile"
        },
        "windowsOptions": {
          "$ref": "#/$defs/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Service": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["Service"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ServiceSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ServiceStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Service",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccount": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "kind": {
          "enum": ["ServiceAccount"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "secrets": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.ObjectReference"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["name"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccount",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "path": {
          "type": "string"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "io.k8s.api.core.v1.SleepAction": {
      "properties": {
        "seconds": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": ["seconds"],
      "type": "object"
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/$defs/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Sysctl": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["name", "value"],
      "type": "object"
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "required": ["port"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Toleration": {
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "properties": {
        "labelSelector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "matchLabelKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "maxSkew": {
          "format": "int32",
          "type": "integer"
        },
        "minDomains": {
          "format": "int32",
          "type": "integer"
        },
        "nodeAffinityPolicy": {
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "type": "string"
        },
        "topologyKey": {
          "type": "string"
        },
        "whenUnsatisfiable": {
          "type": "string"
        }
      },
      "required": ["maxSkew", "topologyKey", "whenUnsatisfiable"],
      "type": "object"
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["kind", "name"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.TypedObjectReference": {
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "required": ["kind", "name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.Volume": {
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/$defs/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/$defs/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/$defs/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/$defs/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/$defs/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/$defs/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/$defs/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/$defs/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/$defs/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/$defs/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/$defs/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/$defs/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/$defs/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/$defs/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/$defs/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/$defs/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "image": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ImageVolumeSource"
        },
        "iscsi": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "type": "string"
        },
        "nfs": {
          "$ref": "#/$defs/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/$defs/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/$defs/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/$defs/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/$defs/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["name", "devicePath"],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "mountPropagation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "recursiveReadOnly": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        },
        "subPathExpr": {
          "type": "string"
        }
      },
      "required": ["name", "mountPath"],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "properties": {
        "clusterTrustBundle": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ClusterTrustBundleProjection"
        },
        "configMap": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/$defs/io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/$defs/io.k8s.api.core.v1.SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ServiceAccountTokenProjection"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeResourceRequirements": {
      "properties": {
        "limits": {
          "additionalProperties": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "properties": {
        "fsType": {
          "type": "string"
        },
        "storagePolicyID": {
          "type": "string"
        },
        "storagePolicyName": {
          "type": "string"
        },
        "volumePath": {
          "type": "string"
        }
      },
      "required": ["volumePath"],
      "type": "object"
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodAffinityTerm"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": ["weight", "podAffinityTerm"],
      "type": "object"
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "properties": {
        "gmsaCredentialSpec": {
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "type": "string"
        },
        "hostProcess": {
          "type": "boolean"
        },
        "runAsUserName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.policy.v1.PodDisruptionBudget": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "enum": ["PodDisruptionBudget"],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
        },
        "status": {
          "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudget",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.policy.v1.PodDisruptionBudgetSpec": {
      "properties": {
        "maxUnavailable": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "minAvailable": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selector": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "x-kubernetes-patch-strategy": "replace"
        },
        "unhealthyPodEvictionPolicy": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "matchLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": ["key", "operator"],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "time": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "creationTimestamp": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "deletionTimestamp": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "format": "int64",
          "type": "integer"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "managedFields": {
          "items": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "items": {
            "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": ["uid"],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "required": ["apiVersion", "kind", "name", "uid"],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    }
  },
  "$id": "https://raw.githubusercontent.com/Cloudzero/cloudzero-agent/refs/heads/develop/helm/values.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "properties": {
    "aggregator": {
      "additionalProperties": false,
      "properties": {
        "affinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Affinity"
        },
        "cloudzero": {
          "additionalProperties": false,
          "properties": {
            "httpMaxRetries": {
              "maximum": 10,
              "minimum": 0,
              "type": "integer"
            },
            "httpMaxWait": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            },
            "rotateInterval": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            },
            "sendInterval": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            },
            "sendTimeout": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            }
          },
          "type": "object"
        },
        "collector": {
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "integer"
            },
            "resources": {
              "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
            }
          },
          "type": "object"
        },
        "database": {
          "additionalProperties": false,
          "properties": {
            "compressionLevel": {
              "maximum": 11,
              "minimum": 0,
              "type": "integer"
            },
            "costMaxInterval": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            },
            "emptyDir": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "medium": {
                  "$ref": "#/$defs/io.k8s.api.core.v1.EmptyDirVolumeSource/properties/medium"
                },
                "sizeLimit": {
                  "$ref": "#/$defs/io.k8s.api.core.v1.EmptyDirVolumeSource/properties/sizeLimit"
                }
              },
              "type": "object"
            },
            "maxRecords": {
              "type": "integer"
            },
            "observabilityMaxInterval": {
              "$ref": "#/$defs/com.cloudzero.agent.duration"
            },
            "purgeRules": {
              "additionalProperties": false,
              "properties": {
                "lazy": {
                  "type": "boolean"
                },
                "metricsOlderThan": {
                  "$ref": "#/$defs/com.cloudzero.agent.duration"
                },
                "percent": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "debugContainer": {
          "type": "boolean"
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image",
          "deprecated": true
        },
        "logging": {
          "additionalProperties": false,
          "properties": {
            "capture": {
              "default": true,
              "type": "boolean"
            },
            "level": {
              "enum": ["debug", "info", "warn", "error"],
              "type": "string"
            }
          },
          "type": "object"
        },
        "mountRoot": {
          "type": "string"
        },
        "name": {
          "deprecated": true,
          "type": ["string", "null"]
        },
        "nodeSelector": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
        },
        "profiling": {
          "type": "boolean"
        },
        "reconnectFrequency": {
          "minimum": 0,
          "type": "integer"
        },
        "shipper": {
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "integer"
            },
            "resources": {
              "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
            }
          },
          "type": "object"
        },
        "tolerations": {
          "$ref": "#/$defs/com.cloudzero.agent.tolerations"
        }
      },
      "type": "object"
    },
    "apiKey": {
      "type": ["string", "null"]
    },
    "cloudAccountId": {
      "type": ["string", "null"]
    },
    "clusterName": {
      "pattern": "^(|[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,251}[a-zA-Z0-9])?)$",
      "type": "string"
    },
    "commonMetaLabels": {
      "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/labels",
      "default": {},
      "deprecated": true,
      "examples": [
        {
          "environment": "production",
          "team": "platform"
        }
      ],
      "title": "Common labels applied to all resources"
    },
    "components": {
      "additionalProperties": false,
      "properties": {
        "agent": {
          "additionalProperties": false,
          "properties": {
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            },
            "podDisruptionBudget": {
              "oneOf": [
                {
                  "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
                },
                {
                  "type": "null"
                }
              ]
            },
            "replicas": {
              "type": "integer"
            },
            "tolerations": {
              "$ref": "#/$defs/com.cloudzero.agent.tolerations"
            }
          },
          "type": "object"
        },
        "aggregator": {
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
            },
            "podDisruptionBudget": {
              "oneOf": [
                {
                  "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
                },
                {
                  "type": "null"
                }
              ]
            },
            "replicas": {
              "additionalProperties": false,
              "type": ["integer", "null"]
            },
            "tolerations": {
              "$ref": "#/$defs/com.cloudzero.agent.tolerations"
            }
          },
          "type": "object"
        },
        "kubectl": {
          "additionalProperties": false,
          "properties": {
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            }
          },
          "type": "object"
        },
        "prometheus": {
          "additionalProperties": false,
          "properties": {
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            }
          },
          "type": "object"
        },
        "prometheusReloader": {
          "additionalProperties": false,
          "properties": {
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            }
          },
          "type": "object"
        },
        "webhookServer": {
          "additionalProperties": false,
          "properties": {
            "podDisruptionBudget": {
              "oneOf": [
                {
                  "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
                },
                {
                  "type": "null"
                }
              ]
            },
            "replicas": {
              "additionalProperties": false,
              "type": ["integer", "null"]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "configMapNameOverride": {
      "deprecated": true,
      "type": ["string", "null"]
    },
    "configmapReload": {
      "deprecated": true,
      "properties": {
        "prometheus": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "type": "boolean"
            },
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            },
            "resources": {
              "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
            }
          },
          "type": "object"
        }
      },
      "title": "Configuration for ConfigMap reloading",
      "type": "object"
    },
    "defaults": {
      "additionalProperties": false,
      "properties": {
        "affinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Affinity"
        },
        "annotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "dns": {
          "$ref": "#/$defs/com.cloudzero.agent.dns"
        },
        "federation": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image"
        },
        "labels": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/labels"
        },
        "nodeSelector": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
        },
        "podDisruptionBudget": {
          "$ref": "#/$defs/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
        },
        "priorityClassName": {
          "type": ["string", "null"]
        },
        "tolerations": {
          "$ref": "#/$defs/com.cloudzero.agent.tolerations"
        }
      },
      "type": "object"
    },
    "existingSecretName": {
      "type": ["string", "null"]
    },
    "forceNamespace": {
      "deprecated": true,
      "type": ["string", "null"]
    },
    "global": {
      "additionalProperties": true,
      "type": "object"
    },
    "host": {
      "minLength": 1,
      "type": "string"
    },
    "imagePullSecrets": {
      "deprecated": true,
      "oneOf": [
        {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
        },
        {
          "type": "null"
        }
      ]
    },
    "initBackfillJob": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "type": "object"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image"
        },
        "imagePullSecrets": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
            },
            {
              "type": "null"
            }
          ]
        },
        "nodeSelector": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
            },
            {
              "type": "null"
            }
          ]
        },
        "tolerations": {
          "$ref": "#/$defs/com.cloudzero.agent.tolerations"
        }
      },
      "type": "object"
    },
    "initCertJob": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image"
        },
        "imagePullSecrets": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
            },
            {
              "type": "null"
            }
          ]
        },
        "nodeSelector": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
        },
        "rbac": {
          "properties": {
            "clusterRoleBindingName": {
              "type": "string"
            },
            "clusterRoleName": {
              "type": "string"
            },
            "create": {
              "default": true,
              "type": "boolean"
            },
            "serviceAccountName": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/serviceAccountName"
            }
          },
          "type": "object"
        },
        "tolerations": {
          "$ref": "#/$defs/com.cloudzero.agent.tolerations"
        }
      },
      "type": "object"
    },
    "initScrapeJob": {
      "additionalProperties": false,
      "deprecated": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "type": ["object", "null"]
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image"
        },
        "imagePullSecrets": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
            },
            {
              "type": "null"
            }
          ]
        },
        "nodeSelector": {
          "oneOf": [
            {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
            },
            {
              "type": "null"
            }
          ]
        },
        "tolerations": {
          "oneOf": [
            {
              "$ref": "#/$defs/com.cloudzero.agent.tolerations"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "type": "object"
    },
    "insightsController": {
      "additionalProperties": false,
      "properties": {
        "ConfigMapNameOverride": {
          "type": ["string", "null"]
        },
        "annotations": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "patterns": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "resources": {
              "additionalProperties": false,
              "properties": {
                "cronjobs": {
                  "default": false,
                  "type": "boolean"
                },
                "daemonsets": {
                  "default": false,
                  "type": "boolean"
                },
                "deployments": {
                  "default": false,
                  "type": "boolean"
                },
                "jobs": {
                  "default": false,
                  "type": "boolean"
                },
                "namespaces": {
                  "default": true,
                  "type": "boolean"
                },
                "nodes": {
                  "default": false,
                  "type": "boolean"
                },
                "pods": {
                  "default": true,
                  "type": "boolean"
                },
                "statefulsets": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "configurationMountPath": {
          "type": ["string", "null"]
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "type": "boolean"
            },
            "patterns": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "resources": {
              "additionalProperties": false,
              "properties": {
                "cronjobs": {
                  "default": false,
                  "type": "boolean"
                },
                "daemonsets": {
                  "default": false,
                  "type": "boolean"
                },
                "deployments": {
                  "default": false,
                  "type": "boolean"
                },
                "jobs": {
                  "default": false,
                  "type": "boolean"
                },
                "namespaces": {
                  "default": true,
                  "type": "boolean"
                },
                "nodes": {
                  "default": false,
                  "type": "boolean"
                },
                "pods": {
                  "default": true,
                  "type": "boolean"
                },
                "statefulsets": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "podAnnotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "podLabels": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/labels"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "server": {
          "additionalProperties": false,
          "properties": {
            "affinity": {
              "$ref": "#/$defs/io.k8s.api.core.v1.Affinity"
            },
            "deploymentAnnotations": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
            },
            "healthCheck": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 15,
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 20,
                  "type": "integer"
                },
                "port": {
                  "default": 8443,
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 3,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "idle_timeout": {
              "$ref": "#/$defs/com.cloudzero.agent.duration",
              "default": "120s"
            },
            "image": {
              "$ref": "#/$defs/com.cloudzero.agent.image"
            },
            "imagePullSecrets": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
            },
            "logging": {
              "additionalProperties": false,
              "properties": {
                "level": {
                  "default": "info",
                  "enum": ["debug", "info", "warn", "error"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "default": "webhook-server",
              "type": "string"
            },
            "nodeSelector": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
            },
            "podAnnotations": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
            },
            "port": {
              "default": 8443,
              "type": "integer"
            },
            "read_timeout": {
              "$ref": "#/$defs/com.cloudzero.agent.duration",
              "default": "10s"
            },
            "reconnectFrequency": {
              "default": 16,
              "minimum": 0,
              "type": "integer"
            },
            "replicaCount": {
              "deprecated": true,
              "type": ["integer", "null"]
            },
            "send_interval": {
              "$ref": "#/$defs/com.cloudzero.agent.duration",
              "default": "1m"
            },
            "send_timeout": {
              "$ref": "#/$defs/com.cloudzero.agent.duration",
              "default": "1m"
            },
            "suppressIstioAnnotations": {
              "default": false,
              "type": "boolean"
            },
            "tolerations": {
              "$ref": "#/$defs/com.cloudzero.agent.tolerations"
            },
            "write_timeout": {
              "$ref": "#/$defs/com.cloudzero.agent.duration",
              "default": "10s"
            }
          },
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "properties": {
            "port": {
              "default": 443,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "tls": {
          "additionalProperties": false,
          "properties": {
            "caBundle": {
              "default": "",
              "type": "string"
            },
            "crt": {
              "default": "",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "type": "boolean"
            },
            "issuerSpec": {
              "additionalProperties": true,
              "type": "object"
            },
            "key": {
              "default": "",
              "type": "string"
            },
            "mountPath": {
              "default": "/etc/certs",
              "type": "string"
            },
            "secret": {
              "additionalProperties": false,
              "properties": {
                "create": {
                  "default": true,
                  "type": "boolean"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "useCertManager": {
              "default": false,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array"
        },
        "volumes": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.Volume"
          },
          "type": "array"
        },
        "webhooks": {
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
            },
            "caInjection": {
              "type": ["string", "null"]
            },
            "namespaceSelector": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            },
            "path": {
              "default": "/validate",
              "type": "string"
            },
            "timeoutSeconds": {
              "$ref": "#/$defs/io.k8s.api.admissionregistration.v1.ValidatingWebhook/properties/timeoutSeconds",
              "default": 1,
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "jobConfigID": {
      "type": ["string", "null"]
    },
    "kubeStateMetrics": {
      "type": "object"
    },
    "nameOverride": {
      "deprecated": true,
      "type": ["string", "null"]
    },
    "prometheusConfig": {
      "additionalProperties": false,
      "properties": {
        "configMapAnnotations": {
          "additionalProperties": true,
          "type": "object"
        },
        "configMapNameOverride": {
          "type": "string"
        },
        "configOverride": {
          "type": "string"
        },
        "globalScrapeInterval": {
          "$ref": "#/$defs/com.cloudzero.agent.duration"
        },
        "outOfOrderTimeWindow": {
          "pattern": "^((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)$",
          "type": ["string", "null"]
        },
        "scrapeJobs": {
          "additionalProperties": false,
          "properties": {
            "additionalScrapeJobs": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "aggregator": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "scrapeInterval": {
                  "$ref": "#/$defs/com.cloudzero.agent.duration"
                }
              },
              "type": "object"
            },
            "cadvisor": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "enum": [true],
                  "type": "boolean"
                },
                "scrapeInterval": {
                  "$ref": "#/$defs/com.cloudzero.agent.duration"
                }
              },
              "required": ["enabled"],
              "type": "object"
            },
            "kubeStateMetrics": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "scrapeInterval": {
                  "$ref": "#/$defs/com.cloudzero.agent.duration"
                }
              },
              "type": "object"
            },
            "prometheus": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "scrapeInterval": {
                  "$ref": "#/$defs/com.cloudzero.agent.duration"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "rbac": {
      "additionalProperties": false,
      "properties": {
        "create": {
          "default": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "region": {
      "type": ["string", "null"]
    },
    "secretAnnotations": {
      "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations",
      "additionalProperties": true,
      "default": {},
      "deprecated": true
    },
    "server": {
      "additionalProperties": false,
      "properties": {
        "affinity": {
          "$ref": "#/$defs/io.k8s.api.core.v1.Affinity"
        },
        "agentMode": {
          "default": true,
          "type": "boolean"
        },
        "annotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "args": {
          "default": [
            "--config.file=/etc/config/prometheus/configmaps/prometheus.yml",
            "--web.enable-lifecycle",
            "--web.console.libraries=/etc/prometheus/console_libraries",
            "--web.console.templates=/etc/prometheus/consoles"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "automountServiceAccountToken": {
          "deprecated": true,
          "type": ["boolean", "null"]
        },
        "clusterRoleNameOverride": {
          "type": ["string", "null"]
        },
        "deploymentAnnotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "emptyDir": {
          "additionalProperties": false,
          "properties": {
            "sizeLimit": {
              "$ref": "#/$defs/io.k8s.api.core.v1.EmptyDirVolumeSource/properties/sizeLimit",
              "default": "8Gi"
            }
          },
          "type": "object"
        },
        "env": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array"
        },
        "fullnameOverride": {
          "type": ["string", "null"]
        },
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image",
          "deprecated": true
        },
        "livenessProbe": {
          "additionalProperties": false,
          "properties": {
            "failureThreshold": {
              "default": 3,
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 30,
              "type": "integer"
            },
            "periodSeconds": {
              "default": 15,
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 10,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "livenessProbeFailureThreshold": {
          "type": ["integer", "null"]
        },
        "livenessProbeInitialDelay": {
          "type": ["integer", "null"]
        },
        "livenessProbePeriodSeconds": {
          "type": ["integer", "null"]
        },
        "livenessProbeSuccessThreshold": {
          "type": ["integer", "null"]
        },
        "livenessProbeTimeout": {
          "type": ["integer", "null"]
        },
        "logging": {
          "additionalProperties": false,
          "properties": {
            "level": {
              "default": "info",
              "enum": ["debug", "info", "warn", "error", null],
              "type": ["string", "null"]
            }
          },
          "type": "object"
        },
        "name": {
          "default": "server",
          "type": "string"
        },
        "nodeSelector": {
          "$ref": "#/$defs/io.k8s.api.core.v1.PodSpec/properties/nodeSelector"
        },
        "persistentVolume": {
          "additionalProperties": false,
          "properties": {
            "accessModes": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimSpec/properties/accessModes"
            },
            "annotations": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
            },
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "type": "string"
            },
            "labels": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/labels"
            },
            "mountPath": {
              "default": "/data",
              "type": "string"
            },
            "selector": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimSpec/properties/selector"
            },
            "size": {
              "$ref": "#/$defs/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "storageClass": {
              "$ref": "#/$defs/io.k8s.api.core.v1.PersistentVolumeClaimSpec/properties/storageClassName"
            },
            "subPath": {
              "default": "",
              "type": "string"
            },
            "volumeBindingMode": {
              "type": ["string", "null"]
            },
            "volumeName": {
              "type": ["string", "null"]
            }
          },
          "type": "object"
        },
        "podAnnotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "podLabels": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/labels"
        },
        "priorityClassName": {
          "type": ["string", "null"]
        },
        "readinessProbe": {
          "additionalProperties": false,
          "properties": {
            "failureThreshold": {
              "default": 3,
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 30,
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 4,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "readinessProbeFailureThreshold": {
          "type": ["integer", "null"]
        },
        "readinessProbeInitialDelay": {
          "type": ["integer", "null"]
        },
        "readinessProbePeriodSeconds": {
          "type": ["integer", "null"]
        },
        "readinessProbeSuccessThreshold": {
          "type": ["integer", "null"]
        },
        "readinessProbeTimeout": {
          "type": ["integer", "null"]
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "deprecated": true,
          "properties": {
            "automountServiceAccountToken": {
              "type": ["boolean", "null"]
            },
            "name": {
              "type": ["string", "null"]
            }
          },
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "type": "integer"
        },
        "tolerations": {
          "$ref": "#/$defs/com.cloudzero.agent.tolerations"
        },
        "topologySpreadConstraints": {
          "items": {
            "$ref": "#/$defs/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "type": "array"
        },
        "useExistingClusterRoleName": {
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "serverConfig": {
      "additionalProperties": false,
      "properties": {
        "containerSecretFileName": {
          "default": "value",
          "type": "string"
        },
        "containerSecretFilePath": {
          "default": "/etc/config/secrets/",
          "type": "string"
        }
      },
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "$ref": "#/$defs/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
        },
        "automountServiceAccountToken": {
          "type": ["boolean", "null"]
        },
        "create": {
          "default": true,
          "type": "boolean"
        },
        "name": {
          "default": "",
          "type": "string"
        }
      },
      "type": "object"
    },
    "validator": {
      "additionalProperties": false,
      "properties": {
        "image": {
          "$ref": "#/$defs/com.cloudzero.agent.image"
        },
        "name": {
          "default": "env-validator",
          "type": "string"
        },
        "resources": {
          "$ref": "#/$defs/io.k8s.api.core.v1.ResourceRequirements"
        },
        "serviceEndpoints": {
          "additionalProperties": false,
          "properties": {
            "kubeStateMetrics": {
              "additionalProperties": true,
              "type": ["string", "null"]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "required": ["host"],
  "type": "object"
}
