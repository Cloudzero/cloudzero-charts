{{- if .Values.insightsController.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudzero-agent.insightsController.deploymentName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloudzero-agent.insightsController.labels" . | nindent 4 }}
  {{- include "cloudzero-agent.generateAnnotations" (merge .Values.defaults.annotations .Values.insightsController.server.deploymentAnnotations) | nindent 2 }}
spec:
  replicas: {{ .Values.insightsController.server.replicaCount | default .Values.components.webhookServer.replicas }}
  selector:
    matchLabels:
      {{- include "cloudzero-agent.insightsController.server.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cloudzero-agent.insightsController.labels" . | nindent 8 }}
        {{- with .Values.insightsController.server.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- include "cloudzero-agent.generateAnnotations" (merge
          (deepCopy .Values.defaults.annotations)
          .Values.insightsController.server.podAnnotations
          (dict "checksum/config" (include "cloudzero-agent.configurationChecksum" .))
        ) | nindent 6 }}
    spec:
      serviceAccountName: {{ include "cloudzero-agent.serviceAccountName" . }}
      {{- include "cloudzero-agent.insightsController.server.imagePullSecrets" . | nindent 6 }}
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        runAsGroup: 65534
        fsGroup: 65534
      {{ $podAntiAffinity := dict "podAntiAffinity" (dict "preferredDuringSchedulingIgnoredDuringExecution" (list (dict "weight" 100 "podAffinityTerm" (dict "labelSelector" (dict "matchLabels" (dict "app" "webhook-server")) "topologyKey" "kubernetes.io/hostname")))) }}
      {{- $userAffinity := deepCopy .Values.insightsController.server.affinity }}
      {{- include "cloudzero-agent.generateAffinity" (dict "default" .Values.defaults.affinity "affinity" (merge $userAffinity $podAntiAffinity)) | nindent 6 }}
      {{- include "cloudzero-agent.generateDNSInfo" (dict "defaults" .Values.defaults.dns) | nindent 6 }}
      {{- include "cloudzero-agent.generatePriorityClassName" .Values.defaults.priorityClassName | nindent 6 }}
      {{- include "cloudzero-agent.generateNodeSelector" (dict "default" .Values.defaults.nodeSelector "nodeSelector" .Values.insightsController.server.nodeSelector) | nindent 6 }}
      {{- include "cloudzero-agent.generateTolerations" (concat .Values.defaults.tolerations .Values.insightsController.server.tolerations) | nindent 6 }}
      containers:
        - name: webhook-server
          {{- include "cloudzero-agent.generateImage" (dict "defaults" .Values.defaults.image "image" .Values.components.agent.image "compat" .Values.insightsController.server.image) | nindent 10 }}
          command:
            - /app/cloudzero-webhook
          args:
            - -config
            - "{{ include "cloudzero-agent.insightsController.configurationMountPath" . }}/server-config.yaml"
          ports:
            - containerPort: 8443
          resources:
            {{- toYaml .Values.insightsController.resources | nindent 12 }}
          volumeMounts:
            - name: insights-server-config
              mountPath: {{ include "cloudzero-agent.insightsController.configurationMountPath" . }}
          {{- if or .Values.insightsController.volumeMounts .Values.insightsController.tls.enabled }}
            {{- if .Values.insightsController.tls.enabled }}
            - name: tls-certs
              mountPath: {{ .Values.insightsController.tls.mountPath }}
              readOnly: true
            {{- end }}
          {{- if or .Values.existingSecretName .Values.apiKey }}
            - name: cloudzero-api-key
              mountPath: {{ .Values.serverConfig.containerSecretFilePath }}
              subPath: ""
              readOnly: true
          {{- end }}
            {{- with .Values.insightsController.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if and .Values.insightsController.server.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: {{ .Values.insightsController.server.healthCheck.path }}
              port: {{ .Values.insightsController.server.healthCheck.port }}
            initialDelaySeconds: {{ .Values.insightsController.server.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.insightsController.server.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.insightsController.server.healthCheck.timeoutSeconds }}
            successThreshold: {{ .Values.insightsController.server.healthCheck.successThreshold }}
            failureThreshold: {{ .Values.insightsController.server.healthCheck.failureThreshold }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: {{ .Values.insightsController.server.healthCheck.path }}
              port: {{ .Values.insightsController.server.healthCheck.port }}
            initialDelaySeconds: {{ .Values.insightsController.server.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.insightsController.server.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.insightsController.server.healthCheck.timeoutSeconds }}
            successThreshold: {{ .Values.insightsController.server.healthCheck.successThreshold }}
            failureThreshold: {{ .Values.insightsController.server.healthCheck.failureThreshold }}
          {{- end }}
      {{- if or .Values.insightsController.volumes .Values.insightsController.tls.enabled }}
      volumes:
        - name: insights-server-config
          configMap:
            name: {{ include "cloudzero-agent.webhookConfigMapName" . }}
        {{- if .Values.insightsController.tls.enabled }}
        - name: tls-certs
          secret:
            secretName: {{ include "cloudzero-agent.tlsSecretName" . }}
        {{- end }}
        {{- if or .Values.existingSecretName .Values.apiKey }}
        - name: cloudzero-api-key
          secret:
            secretName: {{ include "cloudzero-agent.secretName" . }}
        {{- end }}
        {{- with .Values.insightsController.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
