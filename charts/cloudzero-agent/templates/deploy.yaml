apiVersion: apps/v1
kind: Deployment
metadata:
{{- if .Values.server.deploymentAnnotations }}
  annotations:
    {{ toYaml .Values.server.deploymentAnnotations | nindent 4 }}
{{- end }}
  labels:
    {{- include "cloudzero-agent.server.labels" . | nindent 4 }}
  name: {{ template "cloudzero-agent.server.fullname" . }}
  namespace: {{ include "cloudzero-agent.namespace" . }}
spec:
  selector:
    matchLabels:
      {{- include "cloudzero-agent.server.matchLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
    {{- if .Values.server.podAnnotations }}
      annotations:
        {{ toYaml .Values.server.podAnnotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "cloudzero-agent.server.labels" . | nindent 8 }}
        {{- if .Values.server.podLabels}}
        {{ toYaml .Values.server.podLabels | nindent 8 }}
        {{- end}}
    spec:
{{- if .Values.server.priorityClassName }}
      priorityClassName: "{{ .Values.server.priorityClassName }}"
{{- end }}
      serviceAccountName: {{ template "cloudzero-agent.serviceAccountName.server" . }}
      initContainers:
        - name: {{ .Values.validator.name }}
          image: "{{ .Values.validator.image.repository }}:{{ .Values.validator.image.tag }}"
          imagePullPolicy: "{{ .Values.validator.image.pullPolicy }}"
          env:
            - name: CZ_HOST
              value: {{ .Values.host }}
            - name: KMS_EP_URL
              value: http://{{- if .Release.Name }}{{.Release.Name}}-{{- end }}kube-state-metrics:8080/
            - name: NODE_EXPORTER_EP_URL
              value: http://{{- if .Release.Name }}{{.Release.Name}}-{{- end }}prometheus-node-exporter:9100/
          volumeMounts:
            - name: cloudzero-api-key
              mountPath: /etc/config/prometheus/secrets/
              subPath: ""
              readOnly: true
      containers:
        {{- if .Values.configmapReload.prometheus.enabled }}
        - name: {{ template "cloudzero-agent.name" . }}-{{ .Values.server.name }}-configmap-reload
          {{- if .Values.configmapReload.prometheus.image.digest }}
          image: "{{ .Values.configmapReload.prometheus.image.repository }}@{{ .Values.configmapReload.prometheus.image.digest }}"
          {{- else }}
          image: "{{ .Values.configmapReload.prometheus.image.repository }}:{{ .Values.configmapReload.prometheus.image.tag }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.configmapReload.prometheus.image.pullPolicy }}"
          args:
            - --watched-dir=/etc/config
            - --reload-url=http://127.0.0.1:9090/-/reload
          {{- with .Values.configmapReload.prometheus.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        {{- end }}
        - name: {{ template "cloudzero-agent.name" . }}-server
          {{- if .Values.server.image.digest }}
          image: "{{ .Values.server.image.repository }}@{{ .Values.server.image.digest }}"
          {{- else }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion}}"
          {{- end }}
          imagePullPolicy: "{{ .Values.server.image.pullPolicy }}"
          {{- if .Values.server.env }}
          env:
{{ toYaml .Values.server.env | indent 12}}
          {{- end }}
          args:
        {{ toYaml .Values.server.args | nindent 12}}
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: {{ default 30 .Values.server.readinessProbeInitialDelay }}
            periodSeconds: {{ default 5 .Values.server.readinessProbePeriodSeconds }}
            timeoutSeconds: {{ default 4 .Values.server.readinessProbeTimeout }}
            failureThreshold: {{ default 3 .Values.server.readinessProbeFailureThreshold }}
            successThreshold: {{ default 1 .Values.server.readinessProbeSuccessThreshold }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: {{ default 30 .Values.server.livenessProbeInitialDelay }}
            periodSeconds: {{ default 15 .Values.server.livenessProbePeriodSeconds }}
            timeoutSeconds: {{ default 10 .Values.server.livenessProbeTimeout }}
            failureThreshold: {{ default 3 .Values.server.livenessProbeFailureThreshold }}
            successThreshold: {{ default 1 .Values.server.livenessProbeSuccessThreshold }}
          {{- with .Values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/prometheus/configmaps/
            - name: cloudzero-agent-storage-volume
              mountPath: {{ .Values.server.persistentVolume.mountPath }}
              subPath: "{{ .Values.server.persistentVolume.subPath }}"
            - name: cloudzero-api-key
              mountPath: /etc/config/prometheus/secrets/
              subPath: ""
              readOnly: true
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        runAsGroup: 65534
        fsGroup: 65534
      dnsPolicy: ClusterFirst
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
    {{- end }}
    {{- with .Values.server.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ default 300 .Values.server.terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "cloudzero-agent.configMapName" . }}
        - name: cloudzero-api-key
          secret:
            secretName: {{ include "cloudzero-agent.secretName" . }}
        - name: cloudzero-agent-storage-volume
        {{- if .Values.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.server.persistentVolume.existingClaim }}{{ .Values.server.persistentVolume.existingClaim }}{{- else }}{{ template "cloudzero-agent.server.fullname" . }}{{- end }}
        {{- else }}
          emptyDir:
          {{- if .Values.server.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.server.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}
