apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "cloudzero-agent.server.labels" . | nindent 4 }}
  name: {{ include "cloudzero-agent.configMapName" . }}
  namespace: {{ include "cloudzero-agent.namespace" . }}
  {{- with .Values.prometheusConfig.configMapAnnotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  prometheus.yml: |-
  {{- if .Values.prometheusConfig.configOverride }}
  {{ .Values.prometheusConfig.configOverride | nindent 4 }}
  {{- else }}
    global:
      scrape_interval: {{ .Values.prometheusConfig.globalScrapeInterval }}
    scrape_configs:
      {{- if .Values.prometheusConfig.scrapeJobs.kubeStateMetrics.enabled }}
      - job_name: static-kube-state-metrics
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: {{ .Values.prometheusConfig.scrapeJobs.kubeStateMetrics.scrapeInterval }}
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText0.0.4
        metrics_path: /metrics
        scheme: http
        enable_compression: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_service_label_(.+)
          replacement: $1
          action: labelmap
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          regex: (.*)
          target_label: namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          regex: (.*)
          target_label: service
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: (.*)
          target_label: node
          replacement: $1
          action: replace
        metric_relabel_configs:
        - source_labels: [__name__]
          regex: "^({{ join "|" .Values.kubeMetrics }})$"
          action: keep
        - separator: ;
          regex: ^(board_asset_tag|container|created_by_kind|created_by_name|image|instance|name|namespace|node|node_kubernetes_io_instance_type|pod|product_name|provider_id|resource|unit|uid|_.*|label_.*|app.kubernetes.io/*|k8s.*)$
          replacement: $1
          action: labelkeep
        static_configs:
        - targets:
            - {{ include "cloudzero-agent.kubeStateMetrics.kubeStateMetricsSvcTargetName" . }}
      {{- end }}
      {{- if .Values.prometheusConfig.scrapeJobs.cadvisor.enabled }}
      - job_name: cloudzero-nodes-cadvisor # container_* metrics
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: {{ .Values.prometheusConfig.scrapeJobs.cadvisor.scrapeInterval }}
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText0.0.4
        metrics_path: /metrics
        scheme: https
        enable_compression: true
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_node_label_(.+)
          replacement: $1
          action: labelmap
        - separator: ;
          regex: (.*)
          target_label: __address__
          replacement: kubernetes.default.svc:443
          action: replace
        - source_labels: [__meta_kubernetes_node_name]
          separator: ;
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          action: replace
        - source_labels: [__meta_kubernetes_node_name]
          target_label: node
          action: replace
        metric_relabel_configs:
        - action: labelkeep
          regex: "^({{ include "cloudzero-agent.requiredMetricLabels" . }})$"
        - source_labels: [__name__]
          regex: "^({{ join "|" .Values.containerMetrics }})$"
          action: keep
        kubernetes_sd_configs:
        - role: node
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
      {{- end }}
      {{- if .Values.insightsController.enabled }}
      - job_name: cloudzero-insights-controller-job
        metrics_path: /metrics
        scheme: https
        enable_compression: true
        tls_config:
          insecure_skip_verify: true
        follow_redirects: true
        enable_http2: true
        kubernetes_sd_configs:
          - role: endpoints
            kubeconfig_file: ""
            follow_redirects: true
            enable_http2: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            action: keep
            regex: {{ include "cloudzero-agent.insightsController.server.webhookFullname" . }}-svc
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: "^({{ join "|" .Values.insightsMetrics }})$"
            action: keep
      {{- end }}
      {{- if and .Values.aggregator.enabled  .Values.prometheusConfig.scrapeJobs.aggregator.enabled }}
      - job_name: cloudzero-aggregator-job
        scrape_interval: {{ .Values.prometheusConfig.scrapeJobs.prometheus.scrapeInterval }}
        static_configs:
          - targets:
            - {{ include "cloudzero-agent.aggregator.name" . }}.{{ .Release.Namespace }}.svc.cluster.local
        metrics_path: /metrics
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: "{{ include "cloudzero-agent.generateMetricNameFilterRegex" .Values }}"
            action: keep
      {{- end }}
      {{- if .Values.prometheusConfig.scrapeJobs.prometheus.enabled }}
      - job_name: static-prometheus
        scrape_interval: {{ .Values.prometheusConfig.scrapeJobs.prometheus.scrapeInterval }}
        static_configs:
          - targets:
              - localhost:9090
        metrics_path: /metrics
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: "^({{ join "|" .Values.prometheusMetrics }})$"
            action: keep
      {{- end }}
      {{- if .Values.prometheusConfig.scrapeJobs.additionalScrapeJobs -}}
      {{ toYaml .Values.prometheusConfig.scrapeJobs.additionalScrapeJobs | toString | nindent 6 }}
      {{- end}}
  {{- end}}
    remote_write:
      - url: {{ include "cloudzero-agent.metricsDestination" . }}
        authorization:
          credentials_file: {{ include "cloudzero-agent.secretFileFullPath" . }}
        write_relabel_configs:
          - source_labels: [__name__]
            regex: "^({{ include "cloudzero-agent.combineMetrics" . }})$"
            action: keep
        metadata_config:
          send: false

{{- if .Values.insightsController.enabled }}
{{- with .Values.insightsController }}
{{- if not (and .labels.enabled .labels.patterns) }}
{{- $msg := "\n\nThe required field(s) 'insightsController.labels.enabled' and/or 'insightsController.labels.patterns' is not set! See the README.md for more information." }}
{{- $enabledMsg:=""}}
{{- $patternMsg:=""}}
{{- if not .labels.enabled  }}
{{- $enabledMsg = "Ensure that 'insightsController.labels.enabled' is a boolean (true or false). Set 'true' to enable exporting labels."}}
{{- end }}
{{- if not .labels.patterns }}
{{- $patternMsg = "The required field 'labels.patterns' is not set or set incorrectly. It must be an array of regular expressions that match label keys to be exported."}}
{{- end }}
{{- fail (printf "\n %s \n %s \n %s" $msg $enabledMsg $patternMsg) }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "cloudzero-agent.server.labels" . | nindent 4 }}
  name: {{ include "cloudzero-agent.webhookConfigMapName" . }}
  namespace: {{ include "cloudzero-agent.namespace" . }}
  {{- with .Values.prometheusConfig.configMapAnnotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  server-config.yaml: |-
    cloud_account_id: {{ .Values.cloudAccountId }}
    region: {{ .Values.region }}
    cluster_name: {{ .Values.clusterName }}
    destination: {{ include "cloudzero-agent.metricsDestination" . }}
    logging:
      level: {{ .Values.insightsController.server.logging.level }}
    remote_write:
      send_interval: {{ .Values.insightsController.server.send_interval }}
      max_bytes_per_send: 500000
      send_timeout: {{ .Values.insightsController.server.send_timeout }}
      max_retries: 3
    k8s_client:
      timeout: 30s
    database:
      retention_time: 24h
      cleanup_interval: 3h
      batch_update_size: 500
    api_key_path: {{ include "cloudzero-agent.secretFileFullPath" . }}
    {{- with .Values.insightsController }}
    certificate:
      key: {{ .tls.mountPath }}/tls.key
      cert: {{ .tls.mountPath }}/tls.crt
    server:
      port: {{ .server.port }}
      read_timeout: {{ .server.read_timeout }}
      write_timeout: {{ .server.write_timeout }}
      idle_timeout: {{ .server.idle_timeout }}
    {{- end }}
    filters:
      labels:
        {{- .Values.insightsController.labels | toYaml | nindent 8 }}
      annotations:
        {{- .Values.insightsController.annotations | toYaml | nindent 8 }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cloudzero-agent.aggregator.name" . }}
  namespace: {{ .Release.Namespace }}
data:
  config.yml: |-
    cloud_account_id: "{{ .Values.cloudAccountId }}"
    region: "{{ .Values.region }}"
    cluster_name: "{{ .Values.clusterName }}"

    metrics:
      {{- include "cloudzero-agent.generateMetricFilters" (dict "name" "cost" "filters" .Values.metricFilters.cost.name) | nindent 6 }}
      {{- include "cloudzero-agent.generateMetricFilters" (dict "name" "cost_labels" "filters" .Values.metricFilters.cost.labels) | nindent 6 }}
      {{- include "cloudzero-agent.generateMetricFilters" (dict "name" "observability" "filters" .Values.metricFilters.observability.name) | nindent 6 }}
      {{- include "cloudzero-agent.generateMetricFilters" (dict "name" "observability_labels" "filters" .Values.metricFilters.observability.labels) | nindent 6 }}

    server:
      mode: http
      port: {{ .Values.aggregator.collector.port }}
      profiling: {{ .Values.aggregator.profiling }}

    logging:
      level: "{{ .Values.aggregator.logging.level }}"

    database:
      storage_path: {{ .Values.aggregator.mountRoot }}/data
      max_records: {{ .Values.aggregator.database.maxRecords }}
      max_interval: {{ .Values.aggregator.database.maxInterval }}
      compression_level: {{ .Values.aggregator.database.compressionLevel }}
      purge_rules:
        metrics_older_than: {{ .Values.aggregator.database.purgeRules.metricsOlderThan }}
        lazy: {{ .Values.aggregator.database.purgeRules.lazy }}
        percent: {{ .Values.aggregator.database.purgeRules.percent }}

    cloudzero:
      api_key_path: {{ include "cloudzero-agent.secretFileFullPath" . }}
      send_interval: {{ .Values.aggregator.cloudzero.sendInterval }}
      send_timeout: {{ .Values.aggregator.cloudzero.sendTimeout }}
      rotate_interval: {{ .Values.aggregator.cloudzero.rotateInterval }}
      host: {{ .Values.host }}
