{{- if .Values.insightsController.enabled }}
{{ $labelsEnabled := $.Values.insightsController.labels.enabled }}
{{ $annotationEnabled := $.Values.insightsController.annotations.enabled }}
{{- if or $labelsEnabled $annotationEnabled }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "cloudzero-agent.validatingWebhookConfigName" $ }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "cloudzero-agent.insightsController.labels" $ | nindent 4 }}
  {{- $certManagerAnnotations := dict -}}
  {{- if $.Values.insightsController.tls.useCertManager -}}
  {{- $certManagerAnnotations = dict "cert-manager.io/inject-ca-from" ($.Values.insightsController.webhooks.caInjection | default (printf "%s/%s" $.Release.Namespace (include "cloudzero-agent.certificateName" $))) -}}
  {{- end -}}
  {{- include "cloudzero-agent.generateAnnotations" (merge $.Values.defaults.annotations $certManagerAnnotations) | nindent 2 }}
webhooks:
  - name: {{ include "cloudzero-agent.validatingWebhookName" $ }}
    namespaceSelector: {{ toYaml $.Values.insightsController.webhooks.namespaceSelector | nindent 6 }}
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*"]
        scope: "*"
    clientConfig:
      service:
        namespace: {{ $.Release.Namespace }}
        name: {{ include "cloudzero-agent.serviceName" $ }}
        path: {{ $.Values.insightsController.webhooks.path }}
        port: {{ $.Values.insightsController.service.port }}
      {{- if (gt (len $.Values.insightsController.tls.caBundle) 1 ) }}
      caBundle: {{ $.Values.insightsController.tls.caBundle | quote }}
      {{- else if $.Values.insightsController.tls.useCertManager }}
      caBundle: ''
      {{- end }}
    admissionReviewVersions: ["v1"]
    sideEffects: None
    timeoutSeconds: 15
{{- end }}
{{- end }}