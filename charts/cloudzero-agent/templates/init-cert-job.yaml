{{- if .Values.insightsController.enabled }}
{{- if and .Values.insightsController.tls.secret.create (not .Values.insightsController.tls.useCertManager) .Values.initCertJob.enabled (not .Values.insightsController.tls.crt) (not .Values.insightsController.tls.key) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cloudzero-agent.initCertJobName" . }}
  namespace: {{ .Release.Namespace }}
  {{- include "cloudzero-agent.generateAnnotations" (merge (deepCopy .Values.defaults.annotations) .Values.initCertJob.annotations) | nindent 2 }}
  labels:
    {{- include "cloudzero-agent.insightsController.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ include "cloudzero-agent.initCertJobName" . }}
      labels:
        {{- include "cloudzero-agent.insightsController.initCertJob.matchLabels" . | nindent 8 }}
      {{- include "cloudzero-agent.generateAnnotations" .Values.defaults.annotations | nindent 6 }}
    spec:
      {{- include "cloudzero-agent.generateNodeSelector" (dict "default" .Values.defaults.nodeSelector "nodeSelector" (.Values.initCertJob.nodeSelector | default .Values.insightsController.server.nodeSelector)) | nindent 6 }}
      {{- include "cloudzero-agent.generateAffinity" (dict "default" .Values.defaults.affinity "affinity" .Values.insightsController.server.affinity) | nindent 6 }}
      {{- include "cloudzero-agent.generateTolerations" (concat .Values.defaults.tolerations .Values.initCertJob.tolerations .Values.insightsController.server.tolerations) | nindent 6 }}
      serviceAccountName: {{ include "cloudzero-agent.initCertJob.serviceAccountName" . }}
      restartPolicy: Never
      {{- include "cloudzero-agent.generateDNSInfo" (dict "defaults" .Values.defaults.dns) | nindent 6 }}
      {{- include  "cloudzero-agent.initCertJob.imagePullSecrets" . | nindent 6 }}
      {{- include "cloudzero-agent.generatePriorityClassName" .Values.defaults.priorityClassName | nindent 6 }}
      {{- include "cloudzero-agent.generatePodSecurityContext" (mergeOverwrite
          (.Values.defaults.securityContext | default (dict))
          (.Values.components.miscellaneous.initCert.securityContext | default (dict))
        ) | nindent 6 }}
      containers:
        - name: init-cert
          {{- include "cloudzero-agent.generateImage" (dict "defaults" .Values.defaults.image "image" .Values.components.agent.image "compat" .Values.initCertJob.image) | nindent 10 }}
          command: ["/app/cloudzero-certifik8s"]
          workingDir: /var/tmp
          {{- include "cloudzero-agent.generateResources" .Values.components.miscellaneous.initCert.resources | nindent 10 }}
          {{- include "cloudzero-agent.generateContainerSecurityContext" (mergeOverwrite
              (.Values.defaults.securityContext | default (dict))
              (.Values.components.miscellaneous.initCert.securityContext | default (dict))
            ) | nindent 10 }}
          args:
            - "generate"
            - "--secret-name={{ include "cloudzero-agent.tlsSecretName" . }}"
            - "--namespace={{ .Release.Namespace }}"
            - "--service-name={{ include "cloudzero-agent.serviceName" . }}"
            - "--webhook-name={{ include "cloudzero-agent.validatingWebhookConfigName" . }}"
            {{- if .Values.insightsController.labels.enabled }}
            - "--enable-labels"
            {{- end }}
            {{- if .Values.insightsController.annotations.enabled }}
            - "--enable-annotations"
            {{- end }}

{{- end }}
{{- end }}
