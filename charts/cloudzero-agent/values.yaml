# -- CloudZero host to send metrics to.
host: api.cloudzero.com
# -- Account ID of the account the cluster is running in. This must be a string - even if it is a number in your system.
cloudAccountId: null
# -- Name of the clusters.
clusterName: null
# -- Region the cluster is running in.
region: null
# -- CloudZero API key. Required if useExistingSecret is false.
apiKey: null
# -- If set, the agent will use the API key in this Secret to authenticate with CloudZero.
existingSecretName: null

# -- The following lists of metrics are required for CloudZero to function.
# -- Modifications made to these lists may cause issues with the processing of cluster data
kubeMetrics:
  - kube_node_info
  - kube_node_status_capacity
  - kube_pod_container_resource_limits
  - kube_pod_container_resource_requests
  - kube_pod_labels
  - kube_pod_info
  - node_dmi_info
containerMetrics:
  - container_cpu_usage_seconds_total
  - container_memory_working_set_bytes
  - container_network_receive_bytes_total
  - container_network_transmit_bytes_total

# -- Any items added to this array will be added to the metrics that are sent to CloudZero, in addition to the minimal labels that CloudZero requires.
additionalMetricLabels: []

prometheusConfig:
  configMapNameOverride: ''
  configMapAnnotations: {}
  configOverride: ''
  globalScrapeInterval: 120s
  scrapeJobs:
    # -- Enables the kube-state-metrics scrape job.
    kubeStateMetrics:
      enabled: true
      scrapeInterval: 120s  # Scrape interval for kubeStateMetrics job
    # -- Enables the cadvisor scrape job.
    cadvisor:
      enabled: true
      scrapeInterval: 120s  # Scrape interval for nodesCadvisor job
    # -- Any items added to this list will be added to the Prometheus scrape configuration.
    additionalScrapeJobs: []

tags:
  enabled: true
  labels:
    enabled:
    patterns:
      # - '.*'
  annotations:
    enabled: false
    patterns:
      - '.*'

kube-state-metrics:
  enabled: false
prometheus-node-exporter:
  enabled: false

# -- Annotations to be added to the Secret, if the chart is configured to create one
secretAnnotations: {}
imagePullSecrets: []

# environment validator image allows for CI to use a different image in testing
validator:
  serviceEndpoints:
    kubeStateMetrics:
    prometheusNodeExporter:
  # -- Flag to skip validator failure if unable to connect to the CloudZero API.
  name: env-validator
  image:
    repository: ghcr.io/cloudzero/cloudzero-agent-validator/cloudzero-agent-validator
    tag: 0.4.1
    digest:
    pullPolicy: Always

server:
  name: server
  image:
    repository: quay.io/prometheus/prometheus
    # if not set appVersion field from Chart.yaml is used
    tag: ""
    # When digest is set to a non-empty value, images will be pulled by digest (regardless of tag value).
    digest: ""
    pullPolicy: IfNotPresent
  nodeSelector: {}
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1024Mi
  deploymentAnnotations: {}
  podAnnotations: {}
  args:
  - --config.file=/etc/config/prometheus/configmaps/prometheus.yml
  - --web.enable-lifecycle
  - --web.console.libraries=/etc/prometheus/console_libraries
  - --web.console.templates=/etc/prometheus/consoles
  - --enable-feature=agent
  # -- The agent will use this file path on the container filesystem to get the CZ API key.
  containerSecretFilePath: /etc/config/prometheus/secrets/
  # -- The agent will look for a file with this name to get the CZ API key.
  containerSecretFileName: value
  persistentVolume:
    existingClaim: ""
    enabled: false
    mountPath: /data
    subPath: ""
    storageClass: ""
    size: 8Gi
    accessModes:
    - ReadWriteOnce
  # --Limit the size to 8Gi to lower impact on the cluster, and to provide a reasonable backup for the WAL
  emptyDir:
    sizeLimit: 8Gi

serviceAccounts:
  server:
    create: true
    name: ""
    annotations: {}

rbac:
  create: true

commonMetaLabels: {}

configmapReload:
  reloadUrl: ""
  env: []
  prometheus:
    enabled: true
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.70.0
      digest: ""
      pullPolicy: IfNotPresent

    containerSecurityContext: {}
    resources: {}

# -- Values that we need for this chart, and may want to share with child charts. It is unlikely that these need to be modified
global:
  # -- General configuration for CloudZero components
  configMapOverrideName: configuration
  foo: "{{ .Values.host }}-worked"
  cloudzeroConfigMapName: '{{ include "cloudzero-agent.configMapName" . }}'
  cloudzeroSecretName: '{{ include "cloudzero-agent.secretName" . }}'
